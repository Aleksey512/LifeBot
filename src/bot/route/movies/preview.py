from typing import cast

from aiogram import F, Router
from aiogram.types import (
    CallbackQuery,
    FSInputFile,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputMediaPhoto,
    Message,
)

from config.consts import IMG_DIR

router = Router()


def build_movie_preview_msg() -> str:
    return (
        "<b>üé¨ –ú–æ–¥—É–ª—å —Ñ–∏–ª—å–º–æ–≤</b>\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤:\n"
        "‚Äî –î–æ–±–∞–≤–ª—è—Ç—å –≤ —Å–ø–∏—Å–æ–∫ ¬´–•–æ—á—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å¬ª üìå\n"
        "‚Äî –û—Ç–º–µ—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ ‚úÖ\n"
        "‚Äî –°–ª–µ–¥–∏—Ç—å –∑–∞ –∏—Å—Ç–æ—Ä–∏–µ–π –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ üïí\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )


def build_movie_preview_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìå –•–æ—á—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å", callback_data="movies:want:0"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ", callback_data="movies:watched:0"
                ),
            ],
            [InlineKeyboardButton(text="<- –ù–∞–∑–∞–¥", callback_data="main")],
        ]
    )


@router.callback_query(F.data == "movies")
async def handle_movies_preview(clbq: CallbackQuery) -> None:
    await cast(Message, clbq.message).edit_media(
        InputMediaPhoto(
            media=FSInputFile(IMG_DIR / "movieImg.jpg"),
            caption=build_movie_preview_msg(),
            parse_mode="HTML",
        ),
        reply_markup=build_movie_preview_kb(),
    )
